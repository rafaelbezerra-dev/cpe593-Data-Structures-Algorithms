import java.io.FileNotFoundException;
import java.io.FileReader;
import java.util.Calendar;
import java.util.HashSet;
import java.util.Iterator;
import java.util.Random;
import java.util.Scanner;

public class Knuth {
	final static Random rnd = new Random(Calendar.getInstance().getTimeInMillis());

	private static void swap(long[] x, int first, int second) {
		long temp = x[first];
		x[first] = x[second];
		x[second] = temp;
	}

	public static void quicksort(long[] x, int left, int right, int k) {
		if (right <= left)
			return;

		if ((right - left) < k) {
			if (x[left] > x[right])
				swap(x, left, right);
			return;
		}
		
		int pivotIndex = (Math.abs(rnd.nextInt()) % (right - left + 1)) + left;
		long pivot = x[pivotIndex];
		int i = left, j = right;

		while (i < j) {
			while (x[i] < pivot)
				i++;
			while (x[j] > pivot)
				j--;
			if (i < j)
				swap(x, i, j);
		}

		if (left < j)
			quicksort(x, left, j, k);
		if (right > i)
			quicksort(x, i, right, k);

	}

	public static int[] getRandomArray() {
		Random rnd = new Random(Calendar.getInstance().getTimeInMillis());
		final int n = 10000000;
		int[] x = new int[n];
		HashSet<Integer> set = new HashSet<>();
		while (set.size() < n) {
			set.add((Math.abs(rnd.nextInt()) % 100000000));
		}
		int j = 0;
		for (Iterator iterator = set.iterator(); iterator.hasNext();) {
			Integer integer = (Integer) iterator.next();
			x[j] = integer.intValue();
			j++;
		}
		return x;

	}

	public static void main(String[] args) throws FileNotFoundException {
		Scanner s = new Scanner(new FileReader("hw3.dat"));
		
		final int k = 10;
		int n = s.nextInt();
		int[] x = new int[n];

		for (int i = 0; i < n; i++)
			x[i] = s.nextInt();
		s.close();
		long startTime = System.currentTimeMillis();
		quicksort(x, 0, x.length - 1);
		long estimatedTime = System.currentTimeMillis() - startTime;
		System.out.println("The sorting took " + (estimatedTime / 1000f) + " seconds to run.\n\nResult:");

		for (int i = 0; i < x.length; i++) {
			if (i % 20 == 0)
				System.out.println("");
			System.out.print(x[i] + " ");
		}

	}

}
